// EXIT_CODE: 0

type Type[T] = {
    inner: T
}

impl[T] Type[T] {
    fn new(inner: T) -> Type[T] {
        Type { inner: inner }
    }

    fn id[U](inner: U) -> Type[U] {
        Type { inner: inner }
    }

    fn get(self) -> T {
        self.inner
    }
}

fn main() -> i32 {
    let t = Type::new(69);
    assert t.get() == 69;
    let t = Type![i32]::id(1);
    assert t.inner == 1;
    0
}

