// STDOUT: 50 500

import core::intrinsics;
import core::alloc;

extern "C" fn sprintf(buf: *u8, format: *u8, ...);
extern "C" fn printf(format: *u8, ...);

fn main() -> i32 {
    let a = 10 + 20 + 30 + 40 - 50;
    let b = a + a + a + a + a + a + a + a + a + a + a - a;
    let format = "%d %d\n";
    let buf = alloc::malloc(32);
    sprintf(buf, intrinsics::as_ptr(format), a, b);
    printf(buf);
    alloc::free(buf);
    0
}

