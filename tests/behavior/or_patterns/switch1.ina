extern mod core;
using core::prelude::*;

type Test =
    | Foo
    | Bar
    | Baz
    | Qux

fn test(x: Option[Test]) -> usize {
    match x {
        Some(Test::Bar | Test::Qux) => 0,
        Some(_) | None => 1,
    }
}

[test]
fn switch() {
    assert test(Some(Test::Foo)) == 1;
    assert test(Some(Test::Bar)) == 0;
    assert test(Some(Test::Baz)) == 1;
    assert test(Some(Test::Qux)) == 0;
    assert test(None) == 1;
}
