type Foo = {
    a: &i32,
    b: i32
}

fn some(foo: Foo) -> i32 {
    *(foo.a) + foo.b
}

fn other(foo: &Foo) -> i32 {
    *(foo.a) + foo.b
}

#[test]
fn value() {
    let a = 34;
    let foo = Foo { a: &a, b: 35 };
    assert some(foo) == 69;
}

#[test]
fn ref() {
    let a = 34;
    let foo = Foo { a: &a, b: 35 };
    assert other(&foo) == 69;
}
